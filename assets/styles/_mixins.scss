// tween a CSS property's values as the user resizes the window */
$wrapper_width: 1600;
@mixin responsive-property($min_val: 10, $max_val: 13, $property: font-size, $min_width: 400, $max_width: $wrapper_width, $unit: px) {
  @media (max-width: #{$min_width}px){
    #{$property}: #{$min_val}#{$unit};
  }
  @media (min-width: #{$min_width}px) and (max-width: #{$max_width}px){
    #{$property}: calc( #{$min_val}#{$unit} + (#{$max_val} - #{$min_val}) * ( (100vw - #{$min_width}px) / ( #{$max_width} - #{$min_width}) ));
  }
  @media (min-width: #{$max_width}px){
    #{$property}: #{$max_val}#{$unit};
  }
}

// include in an anchor tag to make the underliney link style
@mixin link_hover_effects($link_color) {
  color: $link_color;
  text-decoration: none;
  position: relative;
  display: inline-block;
  &:hover { color: $link_color; }
  &:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 1px;
    bottom: 4px;
    left: 0;
    opacity: 1;
    background-color: $link_color;
    transition: opacity 0.1s;
  }
  &:hover:after { opacity: 0 }
  &:before {
    content: '';
    position: absolute;
    width: 100%;
    height: 1px;
    bottom: 4px;
    left: 0;
    opacity: 1;
    background-color: $link_color;
    transform-origin: left;
    transform: scaleX(0);
    transition: ease 0.25s transform;
    transition-delay: 0.13s;
  }
  &:hover:before { transform: scaleX(1); }
}